name: deploy

on:
  workflow_call:

jobs:
  deploy:
    strategy:
      max-parallel: 1
    runs-on: ubuntu-20.04
    steps:
      - name: get repository files
        uses: actions/checkout@v3
      - name: get version from commit
        run: |
          VERSION=$(git rev-parse --short HEAD)
          echo "VERSION=$VERSION" >> $GITHUB_ENV
      - name: install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
      - name: install SSH key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.DROPLET_PRIVATE_SSH_KEY }}
          name: id_rsa
          known_hosts: ${{ secrets.DROPLET_KNOWN_HOSTS }}
      - name: docker login in droplet
        env:
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
        run: |
          doctl compute ssh ocean --ssh-command="docker login --username $DOCKERHUB_USERNAME --password $DOCKERHUB_TOKEN"
      - name: create env file
        env:
          ENV_FILE: ${{ secrets.ENV_FILE }}
        run: |
          doctl compute ssh ocean --ssh-command="rm -f .env"
          doctl compute ssh ocean --ssh-command="touch .env"
          doctl compute ssh ocean --ssh-command="echo \"$ENV_FILE\" >> .env"
      - name: docker run in droplet
        run: |
          doctl compute ssh ocean --ssh-command="if [ "$(docker ps -a | grep vanir)" ]; then docker stop vanir; fi"
          doctl compute ssh ocean --ssh-command="if [ "$(docker ps -a | grep vanir)" ]; then docker rm vanir; fi"
          doctl compute ssh ocean --ssh-command="docker run -d --name vanir --net senea-network -p 3333:3334 --env-file ./.env brunolombardi/vanir:$VERSION"
      - name: check if container is running
        run: |
          doctl compute ssh ocean --ssh-command="if [ "$( docker container inspect -f '{{.State.Status}}' vanir )" != "running" ]; then exit 1; fi"